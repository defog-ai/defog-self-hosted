"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[500],{66500:function(e,t,r){r.r(t),r.d(t,{NestedAppAuthController:function(){return NestedAppAuthController}});var o=r(5619),n=r(12347),s=r(64602),i=r(16795),a=r(60086),c=r(74201),p=r(11554),u=r(73029),d=r(97915),h=r(26208),A=r(30675),l=r(31879),E=r(46471),g=r(22973);/*! @azure/msal-browser v3.7.1 2024-01-23 */let C={UserInteractionRequired:"USER_INTERACTION_REQUIRED",UserCancel:"USER_CANCEL",NoNetwork:"NO_NETWORK",TransientError:"TRANSIENT_ERROR",PersistentError:"PERSISTENT_ERROR",Disabled:"DISABLED",AccountUnavailable:"ACCOUNT_UNAVAILABLE",NestedAppAuthUnavailable:"NESTED_APP_AUTH_UNAVAILABLE"};/*! @azure/msal-browser v3.7.1 2024-01-23 */let NestedAppAuthAdapter=class NestedAppAuthAdapter{constructor(e,t,r,o){this.clientId=e,this.clientCapabilities=t,this.crypto=r,this.logger=o}toNaaTokenRequest(e){let t;t=void 0===e.extraQueryParameters?new Map:new Map(Object.entries(e.extraQueryParameters));let r=new c.H,o=r.addClientCapabilitiesToClaims(e.claims,this.clientCapabilities),n={platformBrokerId:e.account?.homeAccountId,clientId:this.clientId,authority:e.authority,scope:e.scopes.join(" "),correlationId:void 0!==e.correlationId?e.correlationId:this.crypto.createNewGuid(),claims:p.x.isEmptyObj(o)?void 0:o,state:e.state,authenticationScheme:e.authenticationScheme||u.hO.BEARER,extraParameters:t};return n}fromNaaTokenResponse(e,t,r){if(!t.token.id_token||!t.token.access_token)throw(0,d.zP)(h.PM);let o=new Date((r+(t.token.expires_in||0))*1e3),n=A.Z_(t.token.id_token,this.crypto.base64Decode),s=this.fromNaaAccountInfo(t.account,n),i=t.token.scope||e.scope,a={authority:t.token.authority||s.environment,uniqueId:s.localAccountId,tenantId:s.tenantId,scopes:i.split(" "),account:s,idToken:t.token.id_token,idTokenClaims:n,accessToken:t.token.access_token,fromCache:!0,expiresOn:o,tokenType:e.authenticationScheme||u.hO.BEARER,correlationId:e.correlationId,extExpiresOn:o,state:e.state};return a}fromNaaAccountInfo(e,t){let r=t||e.idTokenClaims,o=e.localAccountId||r?.oid||r?.sub||"",n=e.tenantId||r?.tid||"",s=e.homeAccountId||`${o}.${n}`,i=e.username||r?.preferred_username||"",a=e.name||r?.name,c={homeAccountId:s,environment:e.environment,tenantId:n,username:i,localAccountId:o,name:a,idToken:e.idToken,idTokenClaims:r};return c}fromBridgeError(e){if(void 0===e.status)return new g.l4("unknown_error","An unknown error occurred");switch(e.status){case C.UserCancel:return new d.er(h.$R);case C.NoNetwork:return new d.er(h.Mq);case C.AccountUnavailable:return new d.er(h.cX);case C.Disabled:return new d.er(h.Ls);case C.NestedAppAuthUnavailable:return new d.er(e.code||h.Ls,e.description);case C.TransientError:case C.PersistentError:return new l.n(e.code,e.description);case C.UserInteractionRequired:return new E.Yo(e.code,e.description);default:return new g.l4(e.code,e.description)}}};/*! @azure/msal-browser v3.7.1 2024-01-23 */let N={unsupportedMethod:{code:"unsupported_method",desc:"The PKCE code challenge and verifier could not be generated."}};let NestedAppAuthError=class NestedAppAuthError extends g.l4{constructor(e,t){super(e,t),Object.setPrototypeOf(this,NestedAppAuthError.prototype),this.name="NestedAppAuthError"}static createUnsupportedError(){return new NestedAppAuthError(N.unsupportedMethod.code,N.unsupportedMethod.desc)}};var v=r(19869),k=r(42896);/*! @azure/msal-browser v3.7.1 2024-01-23 */let NestedAppAuthController=class NestedAppAuthController{constructor(e){this.operatingContext=e;let t=this.operatingContext.getBridgeProxy();if(void 0!==t)this.bridgeProxy=t;else throw Error("unexpected: bridgeProxy is undefined");this.config=e.getConfig(),this.logger=this.operatingContext.getLogger(),this.performanceClient=this.config.telemetry.client,this.browserCrypto=e.isBrowserEnvironment()?new a.Q(this.logger,this.performanceClient):o.d,this.eventHandler=new v.b(this.logger,this.browserCrypto),this.nestedAppAuthAdapter=new NestedAppAuthAdapter(this.config.auth.clientId,this.config.auth.clientCapabilities,this.browserCrypto,this.logger)}getBrowserStorage(){throw NestedAppAuthError.createUnsupportedError()}getEventHandler(){return this.eventHandler}static async createController(e){let t=new NestedAppAuthController(e);return Promise.resolve(t)}initialize(){return Promise.resolve()}async acquireTokenInteractive(e){this.eventHandler.emitEvent(k.t.ACQUIRE_TOKEN_START,i.s_.Popup,e);let t=this.performanceClient.startMeasurement(n.Ak.AcquireTokenPopup,e.correlationId);t?.add({nestedAppAuthRequest:!0});try{let r=this.nestedAppAuthAdapter.toNaaTokenRequest(e),o=s.I.nowSeconds(),n=await this.bridgeProxy.getTokenInteractive(r),a=this.nestedAppAuthAdapter.fromNaaTokenResponse(r,n,o);return this.operatingContext.setActiveAccount(a.account),this.eventHandler.emitEvent(k.t.ACQUIRE_TOKEN_SUCCESS,i.s_.Popup,a),t.add({accessTokenSize:a.accessToken.length,idTokenSize:a.idToken.length}),t.end({success:!0,requestId:a.requestId}),a}catch(r){let e=this.nestedAppAuthAdapter.fromBridgeError(r);throw this.eventHandler.emitEvent(k.t.ACQUIRE_TOKEN_FAILURE,i.s_.Popup,null,r),t.end({errorCode:e.errorCode,subErrorCode:e.subError,success:!1}),e}}async acquireTokenSilentInternal(e){this.eventHandler.emitEvent(k.t.ACQUIRE_TOKEN_START,i.s_.Silent,e);let t=this.performanceClient.startMeasurement(n.Ak.SsoSilent,e.correlationId);t?.increment({visibilityChangeCount:0}),t?.add({nestedAppAuthRequest:!0});try{let r=this.nestedAppAuthAdapter.toNaaTokenRequest(e),o=s.I.nowSeconds(),n=await this.bridgeProxy.getTokenSilent(r),a=this.nestedAppAuthAdapter.fromNaaTokenResponse(r,n,o);return this.operatingContext.setActiveAccount(a.account),this.eventHandler.emitEvent(k.t.ACQUIRE_TOKEN_SUCCESS,i.s_.Silent,a),t?.add({accessTokenSize:a.accessToken.length,idTokenSize:a.idToken.length}),t?.end({success:!0,requestId:a.requestId}),a}catch(r){let e=this.nestedAppAuthAdapter.fromBridgeError(r);throw this.eventHandler.emitEvent(k.t.ACQUIRE_TOKEN_FAILURE,i.s_.Silent,null,r),t?.end({errorCode:e.errorCode,subErrorCode:e.subError,success:!1}),e}}async acquireTokenPopup(e){return this.acquireTokenInteractive(e)}acquireTokenRedirect(e){throw NestedAppAuthError.createUnsupportedError()}async acquireTokenSilent(e){return this.acquireTokenSilentInternal(e)}acquireTokenByCode(e){throw NestedAppAuthError.createUnsupportedError()}acquireTokenNative(e,t,r){throw NestedAppAuthError.createUnsupportedError()}acquireTokenByRefreshToken(e,t){throw NestedAppAuthError.createUnsupportedError()}addEventCallback(e){return this.eventHandler.addEventCallback(e)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){throw NestedAppAuthError.createUnsupportedError()}removePerformanceCallback(e){throw NestedAppAuthError.createUnsupportedError()}enableAccountStorageEvents(){throw NestedAppAuthError.createUnsupportedError()}disableAccountStorageEvents(){throw NestedAppAuthError.createUnsupportedError()}getAccount(e){throw NestedAppAuthError.createUnsupportedError()}getAccountByHomeId(e){let t=this.operatingContext.getActiveAccount();return void 0===t?null:t.homeAccountId===e?this.nestedAppAuthAdapter.fromNaaAccountInfo(t):null}getAccountByLocalId(e){let t=this.operatingContext.getActiveAccount();return void 0===t?null:t.localAccountId===e?this.nestedAppAuthAdapter.fromNaaAccountInfo(t):null}getAccountByUsername(e){let t=this.operatingContext.getActiveAccount();return void 0===t?null:t.username===e?this.nestedAppAuthAdapter.fromNaaAccountInfo(t):null}getAllAccounts(){let e=this.operatingContext.getActiveAccount();return void 0!==e?[this.nestedAppAuthAdapter.fromNaaAccountInfo(e)]:[]}handleRedirectPromise(e){throw NestedAppAuthError.createUnsupportedError()}loginPopup(e){if(void 0!==e)return this.acquireTokenInteractive(e);throw NestedAppAuthError.createUnsupportedError()}loginRedirect(e){throw NestedAppAuthError.createUnsupportedError()}logout(e){throw NestedAppAuthError.createUnsupportedError()}logoutRedirect(e){throw NestedAppAuthError.createUnsupportedError()}logoutPopup(e){throw NestedAppAuthError.createUnsupportedError()}ssoSilent(e){return this.acquireTokenSilentInternal(e)}getTokenCache(){throw NestedAppAuthError.createUnsupportedError()}getLogger(){return this.logger}setLogger(e){this.logger=e}setActiveAccount(e){this.logger.warning("nestedAppAuth does not support setActiveAccount")}getActiveAccount(){let e=this.operatingContext.getActiveAccount();return void 0!==e?this.nestedAppAuthAdapter.fromNaaAccountInfo(e):null}initializeWrapperLibrary(e,t){}setNavigationClient(e){this.logger.warning("setNavigationClient is not supported in nested app auth")}getConfiguration(){return this.config}isBrowserEnv(){return this.operatingContext.isBrowserEnvironment()}getBrowserCrypto(){return this.browserCrypto}getPerformanceClient(){throw NestedAppAuthError.createUnsupportedError()}getRedirectResponse(){throw NestedAppAuthError.createUnsupportedError()}preflightBrowserEnvironmentCheck(e,t){throw NestedAppAuthError.createUnsupportedError()}async clearCache(e){throw NestedAppAuthError.createUnsupportedError()}async hydrateCache(e,t){throw NestedAppAuthError.createUnsupportedError()}}}}]);